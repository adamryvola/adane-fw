{
  "stats": {
    "suites": 24,
    "tests": 57,
    "passes": 57,
    "pending": 0,
    "failures": 0,
    "start": "2017-10-01T19:59:54.872Z",
    "end": "2017-10-01T20:00:04.462Z",
    "duration": 9590,
    "testsRegistered": 57,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Basic elements",
        "suites": [
          {
            "title": "Abstract class - constructor",
            "suites": [],
            "tests": [
              {
                "title": "throw error on create BasicModel class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create BasicModel class instance",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    new BasicModel();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "d542d3fe-eac2-4c4d-ada5-d8c9278a6961",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create PublicModel class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create PublicModel class instance",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const PublicModel = require('../../src/api/db/model/PublicModel');\nexpect(() => {\n    new PublicModel();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "2cc2d486-08ee-4828-a100-fda3d52d8981",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create BasicDao class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create BasicDao class instance",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const BasicDAO = require('../../src/api/db/dao/BasicDAO');\nexpect(() => {\n    new BasicDAO();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "41b5a3c2-083f-4e52-ad53-58dd5b9a2f04",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create EndpointRouter class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create EndpointRouter class instance",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const EndpointRouter = require('../../src/api/router/EndpointRouter');\nexpect(() => {\n    new EndpointRouter();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "6f4ec011-7b7c-4278-9c3f-a43c9f7d30bd",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create CRUDRouter class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create CRUDRouter class instance",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const CRUDRouter = require('../../src/api/router/CRUDRouter');\nexpect(() => {\n    new CRUDRouter();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "e7566b30-803e-41ed-875e-4a692e386ff8",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\Basic.js",
            "uuid": "e2d973e3-aef7-4583-8499-c0094ecee236",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\Basic.js",
            "passes": [
              {
                "title": "throw error on create BasicModel class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create BasicModel class instance",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    new BasicModel();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "d542d3fe-eac2-4c4d-ada5-d8c9278a6961",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create PublicModel class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create PublicModel class instance",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const PublicModel = require('../../src/api/db/model/PublicModel');\nexpect(() => {\n    new PublicModel();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "2cc2d486-08ee-4828-a100-fda3d52d8981",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create BasicDao class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create BasicDao class instance",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const BasicDAO = require('../../src/api/db/dao/BasicDAO');\nexpect(() => {\n    new BasicDAO();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "41b5a3c2-083f-4e52-ad53-58dd5b9a2f04",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create EndpointRouter class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create EndpointRouter class instance",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const EndpointRouter = require('../../src/api/router/EndpointRouter');\nexpect(() => {\n    new EndpointRouter();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "6f4ec011-7b7c-4278-9c3f-a43c9f7d30bd",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create CRUDRouter class instance",
                "fullTitle": "Basic elements Abstract class - constructor throw error on create CRUDRouter class instance",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const CRUDRouter = require('../../src/api/router/CRUDRouter');\nexpect(() => {\n    new CRUDRouter();\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "e7566b30-803e-41ed-875e-4a692e386ff8",
                "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21,
            "rootEmpty": false
          },
          {
            "title": "BasicDAO Errors",
            "suites": [],
            "tests": [
              {
                "title": "throw error on getById without id",
                "fullTitle": "Basic elements BasicDAO Errors throw error on getById without id",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.getById(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "45586763-85e9-4976-b925-e3872f3a7367",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create without data",
                "fullTitle": "Basic elements BasicDAO Errors throw error on create without data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.create(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "ca2bee8d-e0e4-4f25-8891-3ed0e12cedb0",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on update without data",
                "fullTitle": "Basic elements BasicDAO Errors throw error on update without data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.update(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "e00b9058-fe39-4c34-ae1b-bb2f12cf9f42",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on delete without id",
                "fullTitle": "Basic elements BasicDAO Errors throw error on delete without id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.remove(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "22bdaa69-6921-442d-bfb2-c893ad513e4d",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\Basic.js",
            "uuid": "55c10128-05fd-4af8-9288-b1cff3aaa573",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\Basic.js",
            "passes": [
              {
                "title": "throw error on getById without id",
                "fullTitle": "Basic elements BasicDAO Errors throw error on getById without id",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.getById(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "45586763-85e9-4976-b925-e3872f3a7367",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on create without data",
                "fullTitle": "Basic elements BasicDAO Errors throw error on create without data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.create(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "ca2bee8d-e0e4-4f25-8891-3ed0e12cedb0",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on update without data",
                "fullTitle": "Basic elements BasicDAO Errors throw error on update without data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.update(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "e00b9058-fe39-4c34-ae1b-bb2f12cf9f42",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "throw error on delete without id",
                "fullTitle": "Basic elements BasicDAO Errors throw error on delete without id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.remove(null, null);\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "22bdaa69-6921-442d-bfb2-c893ad513e4d",
                "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5,
            "rootEmpty": false
          },
          {
            "title": "BasicModel Errors",
            "suites": [],
            "tests": [
              {
                "title": "throw error on get table name",
                "fullTitle": "Basic elements BasicModel Errors throw error on get table name",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    const tableName = BasicModel.tableName;\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "1f877b65-7746-4ce3-80b6-f4b74639f729",
                "parentUUID": "946eda86-59dd-4b7d-9140-13d710c67272",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\Basic.js",
            "uuid": "946eda86-59dd-4b7d-9140-13d710c67272",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\Basic.js",
            "passes": [
              {
                "title": "throw error on get table name",
                "fullTitle": "Basic elements BasicModel Errors throw error on get table name",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    const tableName = BasicModel.tableName;\n}).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "1f877b65-7746-4ce3-80b6-f4b74639f729",
                "parentUUID": "946eda86-59dd-4b7d-9140-13d710c67272",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\api\\Basic.js",
        "uuid": "1f517cf9-3d8d-4548-aff5-3963df4aa875",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\Basic.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "CustomEntity",
        "suites": [
          {
            "title": "Create",
            "suites": [
              {
                "title": "Success",
                "suites": [],
                "tests": [
                  {
                    "title": "status 200",
                    "fullTitle": "Create Success status 200",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3898224e-43ce-4e51-a7a9-b6089556f679",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Create Success body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c6d0a2c-c9c7-45bd-b22b-673312268233",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid model schema",
                    "fullTitle": "Create Success valid model schema",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae18ed84-6ac3-4607-8cca-02cadec25306",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "user properties values",
                    "fullTitle": "Create Success user properties values",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7f005f98-2815-421a-a1ce-75b62ea6724d",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "fd5473dc-fb52-468f-a053-c41202901784",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Create Success \"before all\" hook",
                    "timedOut": false,
                    "duration": 145,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        response = res;\n                        done();\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c7ce4635-9df3-43bc-9276-13ab4d22e305",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 200",
                    "fullTitle": "Create Success status 200",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3898224e-43ce-4e51-a7a9-b6089556f679",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Create Success body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c6d0a2c-c9c7-45bd-b22b-673312268233",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid model schema",
                    "fullTitle": "Create Success valid model schema",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae18ed84-6ac3-4607-8cca-02cadec25306",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "user properties values",
                    "fullTitle": "Create Success user properties values",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7f005f98-2815-421a-a1ce-75b62ea6724d",
                    "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4,
                "rootEmpty": false
              },
              {
                "title": "Fail",
                "suites": [],
                "tests": [
                  {
                    "title": "status 400",
                    "fullTitle": "Create Fail status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c927f6d8-41da-464f-b621-5bfd7be66c3a",
                    "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Create Fail body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "61100c70-513a-457e-a869-78d6a75f8fd7",
                    "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Create Fail valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "635f0adf-e818-4cb8-9efa-ab87387c1083",
                    "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Create Fail \"before all\" hook",
                    "timedOut": false,
                    "duration": 31,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        response = res;\n                        done();\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ad0fd1a4-8329-45f8-8294-df5d8d013e20",
                    "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 400",
                    "fullTitle": "Create Fail status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c927f6d8-41da-464f-b621-5bfd7be66c3a",
                    "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Create Fail body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "61100c70-513a-457e-a869-78d6a75f8fd7",
                    "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Create Fail valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "635f0adf-e818-4cb8-9efa-ab87387c1083",
                    "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\CustomEntity.js",
            "uuid": "98cf5277-c46a-4e7a-951c-584722ab02c5",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "Get by id",
            "suites": [
              {
                "title": "Success",
                "suites": [],
                "tests": [
                  {
                    "title": "status 200",
                    "fullTitle": "Get by id Success status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2592d21e-a4d9-49ea-8f81-86c757c92465",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Get by id Success body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d8dca341-7d8b-4d6d-a8ee-3967dfa423a6",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid model schema",
                    "fullTitle": "Get by id Success valid model schema",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a6a2224-00de-4872-8c3f-dd9843f1c799",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "user properties values",
                    "fullTitle": "Get by id Success user properties values",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3369c7b8-f1f4-4c9a-8b7b-1a851117b06a",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Get by id Success \"before all\" hook",
                    "timedOut": false,
                    "duration": 42,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        createdUserId = res.body.id;\n                        chai.request(server).get('/user/' + createdUserId)\n                            .end((err, res) => {\n                                response = res;\n                                done();\n                            });\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2e7dbe5-7733-4e24-a8f2-ba25d79fdb4d",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 200",
                    "fullTitle": "Get by id Success status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2592d21e-a4d9-49ea-8f81-86c757c92465",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Get by id Success body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d8dca341-7d8b-4d6d-a8ee-3967dfa423a6",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid model schema",
                    "fullTitle": "Get by id Success valid model schema",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a6a2224-00de-4872-8c3f-dd9843f1c799",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "user properties values",
                    "fullTitle": "Get by id Success user properties values",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3369c7b8-f1f4-4c9a-8b7b-1a851117b06a",
                    "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "Fail - no user",
                "suites": [],
                "tests": [
                  {
                    "title": "status 404",
                    "fullTitle": "Get by id Fail - no user status 404",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(404);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ea83f21-34e8-4a2b-800e-c8f160bd57de",
                    "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Get by id Fail - no user body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25fe22a0-26ef-444a-b764-c234bd2c284d",
                    "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Get by id Fail - no user valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a3a3a5de-1ec9-4836-ac85-b0337263474b",
                    "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Get by id Fail - no user \"before all\" hook",
                    "timedOut": false,
                    "duration": 8,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).get('/user/1')\n                    .end\n                        response = res;\n                        done();\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "84e02d81-868f-4846-a95d-ea7cde509b57",
                    "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 404",
                    "fullTitle": "Get by id Fail - no user status 404",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(404);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ea83f21-34e8-4a2b-800e-c8f160bd57de",
                    "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Get by id Fail - no user body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25fe22a0-26ef-444a-b764-c234bd2c284d",
                    "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Get by id Fail - no user valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a3a3a5de-1ec9-4836-ac85-b0337263474b",
                    "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "Fail - id as string",
                "suites": [],
                "tests": [
                  {
                    "title": "status 400",
                    "fullTitle": "Get by id Fail - id as string status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "13926b71-3308-4d01-86ae-3c88080867e6",
                    "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Get by id Fail - id as string body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "078b2ce1-c2c2-41e8-9c8b-4d33d543b9dc",
                    "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Get by id Fail - id as string valid response",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d769e855-2abc-4583-8e9f-723f30d57de1",
                    "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Get by id Fail - id as string \"before all\" hook",
                    "timedOut": false,
                    "duration": 6,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).get('/user/xx')\n                    .end\n                        response = res;\n                        done();\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5c2bb52-0ba4-4f0d-9dc8-dd93ef7f59ee",
                    "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 400",
                    "fullTitle": "Get by id Fail - id as string status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "13926b71-3308-4d01-86ae-3c88080867e6",
                    "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Get by id Fail - id as string body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "078b2ce1-c2c2-41e8-9c8b-4d33d543b9dc",
                    "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Get by id Fail - id as string valid response",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d769e855-2abc-4583-8e9f-723f30d57de1",
                    "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\CustomEntity.js",
            "uuid": "c48240cf-b18a-4ec7-9ae0-9aa5618d2329",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "GetAll",
            "suites": [],
            "tests": [
              {
                "title": "status 200",
                "fullTitle": "CustomEntity GetAll status 200",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response.status.should.be.eql(200);",
                "err": {},
                "isRoot": false,
                "uuid": "0ddbeda8-254b-4a77-b572-d3db2219bb28",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "body is array",
                "fullTitle": "CustomEntity GetAll body is array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response.body.should.be.a('array');\nresponse.body.length.should.be.eql(2);",
                "err": {},
                "isRoot": false,
                "uuid": "22bd20eb-ee00-43b0-aa45-a5acc66e8694",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "valid model schema",
                "fullTitle": "CustomEntity GetAll valid model schema",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const users = response.body;\nusers[0].should.be.property('id');\nusers[0].id.should.be.a('number');\nusers[0].should.be.property('name');\nusers[0].name.should.be.a('string');\nusers[0].should.be.property('email');\nusers[0].email.should.be.a('string');\nusers[0].should.be.property('accounts');\nusers[0].accounts.should.be.a('array');\nusers[0].accounts[0].should.be.a('object');\nusers[1].should.be.property('id');\nusers[1].id.should.be.a('number');\nusers[1].should.be.property('name');\nusers[1].name.should.be.a('string');\nusers[1].should.be.property('email');\nusers[1].email.should.be.a('string');\nusers[1].should.be.property('accounts');\nusers[1].accounts.should.be.a('array');\nusers[1].accounts[0].should.be.a('object');",
                "err": {},
                "isRoot": false,
                "uuid": "cfdd5f83-05c1-48eb-bab8-aec498ecac86",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "users properties values",
                "fullTitle": "CustomEntity GetAll users properties values",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const users = response.body;\nusers[0].name.should.be.eql(userObject.name);\nusers[0].email.should.be.eql(userObject.email);\nusers[0].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[0].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[0].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[0].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[0].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);\nusers[1].name.should.be.eql(userObject.name);\nusers[1].email.should.be.eql(userObject.email);\nusers[1].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[1].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[1].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[1].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[1].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
                "err": {},
                "isRoot": false,
                "uuid": "894bd02d-fb04-40c1-b7e6-9877d22ef36f",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\CustomEntity.js",
            "uuid": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "CustomEntity GetAll \"before all\" hook",
                "timedOut": false,
                "duration": 61,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "done => {\n            chai.request(server).post('/user')\n                .send(userObject)\n                .end\n                    chai.request(server).post('/user')\n                        .send(userObject)\n                        .end((err, res) => {\n                            chai.request(server).get('/user')\n                                .end((err, res) => {\n                                    response = res;\n                                    done();\n                                });\n                        });\n                });",
                "err": {},
                "isRoot": false,
                "uuid": "2c427843-1242-49c0-b6b1-24b8355d9850",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
            "passes": [
              {
                "title": "status 200",
                "fullTitle": "CustomEntity GetAll status 200",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response.status.should.be.eql(200);",
                "err": {},
                "isRoot": false,
                "uuid": "0ddbeda8-254b-4a77-b572-d3db2219bb28",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "body is array",
                "fullTitle": "CustomEntity GetAll body is array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response.body.should.be.a('array');\nresponse.body.length.should.be.eql(2);",
                "err": {},
                "isRoot": false,
                "uuid": "22bd20eb-ee00-43b0-aa45-a5acc66e8694",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "valid model schema",
                "fullTitle": "CustomEntity GetAll valid model schema",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const users = response.body;\nusers[0].should.be.property('id');\nusers[0].id.should.be.a('number');\nusers[0].should.be.property('name');\nusers[0].name.should.be.a('string');\nusers[0].should.be.property('email');\nusers[0].email.should.be.a('string');\nusers[0].should.be.property('accounts');\nusers[0].accounts.should.be.a('array');\nusers[0].accounts[0].should.be.a('object');\nusers[1].should.be.property('id');\nusers[1].id.should.be.a('number');\nusers[1].should.be.property('name');\nusers[1].name.should.be.a('string');\nusers[1].should.be.property('email');\nusers[1].email.should.be.a('string');\nusers[1].should.be.property('accounts');\nusers[1].accounts.should.be.a('array');\nusers[1].accounts[0].should.be.a('object');",
                "err": {},
                "isRoot": false,
                "uuid": "cfdd5f83-05c1-48eb-bab8-aec498ecac86",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "users properties values",
                "fullTitle": "CustomEntity GetAll users properties values",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const users = response.body;\nusers[0].name.should.be.eql(userObject.name);\nusers[0].email.should.be.eql(userObject.email);\nusers[0].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[0].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[0].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[0].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[0].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);\nusers[1].name.should.be.eql(userObject.name);\nusers[1].email.should.be.eql(userObject.email);\nusers[1].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[1].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[1].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[1].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[1].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
                "err": {},
                "isRoot": false,
                "uuid": "894bd02d-fb04-40c1-b7e6-9877d22ef36f",
                "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": true,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "Delete",
            "suites": [
              {
                "title": "Success",
                "suites": [],
                "tests": [
                  {
                    "title": "status 200",
                    "fullTitle": "Delete Success status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5bf20c09-2bda-4bd0-92ee-4849c8611f63",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Delete Success body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a6d036fb-a7be-410c-8c0f-7ca88ed77624",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Delete Success valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f67cbe58-509d-449a-bee2-931e57ce2c26",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "one is deleted",
                    "fullTitle": "Delete Success one is deleted",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "allUsers.length.should.be.eql(1);\nallUsers[0].id.should.be.eql(2);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a5cc0b57-9107-4bed-9680-ddc615833031",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Delete Success \"before all\" hook",
                    "timedOut": false,
                    "duration": 65,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        chai.request(server).post('/user')\n                            .send(userObject)\n                            .end((err, res) => {\n                                chai.request(server).delete('/user/1')\n                                    .end((err, res) => {\n                                        response = res;\n                                        chai.request(server).get('/user')\n                                            .end((err, res) => {\n                                                allUsers = res.body;\n                                                done();\n                                            });\n                                    });\n                            });\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "896860c9-d4e1-4775-9e98-00fb6e7132f1",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 200",
                    "fullTitle": "Delete Success status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5bf20c09-2bda-4bd0-92ee-4849c8611f63",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Delete Success body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a6d036fb-a7be-410c-8c0f-7ca88ed77624",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Delete Success valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f67cbe58-509d-449a-bee2-931e57ce2c26",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "one is deleted",
                    "fullTitle": "Delete Success one is deleted",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "allUsers.length.should.be.eql(1);\nallUsers[0].id.should.be.eql(2);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a5cc0b57-9107-4bed-9680-ddc615833031",
                    "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "Fail - no user in db",
                "suites": [],
                "tests": [
                  {
                    "title": "status 404",
                    "fullTitle": "Delete Fail - no user in db status 404",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(404);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01537af7-2ff5-4c1d-a5b9-f77ee59ef6da",
                    "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Delete Fail - no user in db body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object')",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdb5ba8b-6bef-40c0-ab03-565ce4a2e4e1",
                    "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Delete Fail - no user in db valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71808254-45b2-408c-ab79-7423187e7c33",
                    "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "afa9bef7-52dc-4813-b14e-1352d4601441",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Delete Fail - no user in db \"before all\" hook",
                    "timedOut": false,
                    "duration": 9,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).delete('/user/1')\n                    .end\n                        response = res;\n                        done();\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59c6a582-eb21-44a7-8792-7c70f5213045",
                    "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 404",
                    "fullTitle": "Delete Fail - no user in db status 404",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(404);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01537af7-2ff5-4c1d-a5b9-f77ee59ef6da",
                    "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Delete Fail - no user in db body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object')",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdb5ba8b-6bef-40c0-ab03-565ce4a2e4e1",
                    "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Delete Fail - no user in db valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71808254-45b2-408c-ab79-7423187e7c33",
                    "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "Fail - id as string",
                "suites": [],
                "tests": [
                  {
                    "title": "status 400",
                    "fullTitle": "Delete Fail - id as string status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "920f8382-e8e5-43bd-9309-cfe16d049b66",
                    "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Delete Fail - id as string body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a3ada18-513e-4b04-bac1-48b23b9666df",
                    "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Delete Fail - id as string valid response",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc056d6c-f711-4550-a481-42d7881ccc0c",
                    "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "Delete Fail - id as string \"before all\" hook",
                    "timedOut": false,
                    "duration": 8,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).delete('/user/xx')\n                    .end\n                        response = res;\n                        done();\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fe7989f0-de07-4a40-a078-377353f3cd6f",
                    "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 400",
                    "fullTitle": "Delete Fail - id as string status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "920f8382-e8e5-43bd-9309-cfe16d049b66",
                    "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Delete Fail - id as string body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a3ada18-513e-4b04-bac1-48b23b9666df",
                    "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "Delete Fail - id as string valid response",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc056d6c-f711-4550-a481-42d7881ccc0c",
                    "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\CustomEntity.js",
            "uuid": "fbbe0f7a-b9ee-4cf3-9965-77d024685fdd",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "Update",
            "suites": [
              {
                "title": "Success",
                "suites": [],
                "tests": [
                  {
                    "title": "status 200",
                    "fullTitle": "Update Success status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc7f9c33-235f-4782-8918-c423ac93529d",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Update Success body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "421d0666-3b04-4ad5-bb47-9d4ee4b11d93",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid model schema",
                    "fullTitle": "Update Success valid model schema",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c798cd17-eca5-40e2-90e5-4f4611e83e9c",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "user properties values",
                    "fullTitle": "Update Success user properties values",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.name.should.be.eql(userToUpdate.name);\nuser.email.should.be.eql(userToUpdate.email);\nuser.accounts[0].accessToken.should.be.eql(userToUpdate.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userToUpdate.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userToUpdate.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userToUpdate.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userToUpdate.accounts[0].subject);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ed31c3b-a006-4ac4-aa2f-5e1ee3d010b8",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                "beforeHooks": [],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 200",
                    "fullTitle": "Update Success status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc7f9c33-235f-4782-8918-c423ac93529d",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "Update Success body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "421d0666-3b04-4ad5-bb47-9d4ee4b11d93",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid model schema",
                    "fullTitle": "Update Success valid model schema",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c798cd17-eca5-40e2-90e5-4f4611e83e9c",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "user properties values",
                    "fullTitle": "Update Success user properties values",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "user = response.body;\nuser.name.should.be.eql(userToUpdate.name);\nuser.email.should.be.eql(userToUpdate.email);\nuser.accounts[0].accessToken.should.be.eql(userToUpdate.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userToUpdate.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userToUpdate.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userToUpdate.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userToUpdate.accounts[0].subject);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ed31c3b-a006-4ac4-aa2f-5e1ee3d010b8",
                    "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": false,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3,
                "rootEmpty": false
              },
              {
                "title": "Fail",
                "suites": [],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "26fa8151-02b5-4be2-8743-ec44e6b8387b",
                "beforeHooks": [],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": false,
                "hasAfterHooks": false,
                "hasTests": false,
                "hasSuites": false,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\CustomEntity.js",
            "uuid": "eafbad35-3e64-4bd9-8224-1c891e624dd2",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "CustomEntity Update \"before all\" hook",
                "timedOut": false,
                "duration": 48,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "done => {\n            chai.request(server).post('/user')\n                .send(userObject)\n                .end\n                    const createdUser = res.body;\n                    userToUpdate.accounts[0].id = createdUser.accounts[0].id;\n                    chai.request(server).put(`/user/${createdUser.id}`)\n                        .send(userToUpdate)\n                        .end((err, res) => {\n                            response = res;\n                            done();\n                        });\n                });",
                "err": {},
                "isRoot": false,
                "uuid": "31c2c95f-3266-4b8a-a046-78e00160a5fc",
                "parentUUID": "eafbad35-3e64-4bd9-8224-1c891e624dd2",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": true,
            "hasAfterHooks": false,
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "User - email available",
            "suites": [
              {
                "title": "Success - email is not available",
                "suites": [],
                "tests": [
                  {
                    "title": "status 200",
                    "fullTitle": "User - email available Success - email is not available status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "23e32a73-d66f-4c11-9f32-d4f6d7f78545",
                    "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Success - email is not available body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffcad017-d86e-4bac-a255-408e0712fc09",
                    "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "correct response value",
                    "fullTitle": "User - email available Success - email is not available correct response value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.result.should.be.eql(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59c0b64a-0ea6-42c7-8d7c-543c39853112",
                    "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "28a74408-3a1e-4303-8243-34e0be1d3709",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "User - email available Success - email is not available \"before all\" hook",
                    "timedOut": false,
                    "duration": 33,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        chai.request(server).get(`/user/available?email=${userObject.email}`)\n                            .send()\n                            .end((err, res) => {\n                                response = res;\n                                done();\n                            });\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3791bc63-a9c8-4634-b522-12f446fe2301",
                    "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 200",
                    "fullTitle": "User - email available Success - email is not available status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "23e32a73-d66f-4c11-9f32-d4f6d7f78545",
                    "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Success - email is not available body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffcad017-d86e-4bac-a255-408e0712fc09",
                    "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "correct response value",
                    "fullTitle": "User - email available Success - email is not available correct response value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.result.should.be.eql(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59c0b64a-0ea6-42c7-8d7c-543c39853112",
                    "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "Success - email is available",
                "suites": [],
                "tests": [
                  {
                    "title": "status 200",
                    "fullTitle": "User - email available Success - email is available status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7edec915-f9a5-4faf-8090-a035c9d35d9c",
                    "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Success - email is available body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ac5cf7b-7d65-422e-9085-23c0e8a67ee7",
                    "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "correct response value",
                    "fullTitle": "User - email available Success - email is available correct response value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.result.should.be.eql(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "74251c21-5f9f-47ab-9c1b-34affd7988e5",
                    "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "User - email available Success - email is available \"before all\" hook",
                    "timedOut": false,
                    "duration": 29,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        chai.request(server).get('/user/available?email=fake@mail.com')\n                            .send()\n                            .end((err, res) => {\n                                response = res;\n                                done();\n                            });\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3348fa96-47b3-48ea-9ced-5465a803c78c",
                    "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 200",
                    "fullTitle": "User - email available Success - email is available status 200",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(200);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7edec915-f9a5-4faf-8090-a035c9d35d9c",
                    "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Success - email is available body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ac5cf7b-7d65-422e-9085-23c0e8a67ee7",
                    "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "correct response value",
                    "fullTitle": "User - email available Success - email is available correct response value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.result.should.be.eql(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "74251c21-5f9f-47ab-9c1b-34affd7988e5",
                    "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "Fail - req without email in query",
                "suites": [],
                "tests": [
                  {
                    "title": "status 400",
                    "fullTitle": "User - email available Fail - req without email in query status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "94cc61c4-0b2e-428e-a319-069b196d0fee",
                    "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Fail - req without email in query body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0d2be971-14aa-4aa1-a3bd-afa610bc5d36",
                    "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "User - email available Fail - req without email in query valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a09a3559-46b8-44e8-993d-8d8304c46545",
                    "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "User - email available Fail - req without email in query \"before all\" hook",
                    "timedOut": false,
                    "duration": 24,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        chai.request(server).get('/user/available')\n                            .send()\n                            .end((err, res) => {\n                                response = res;\n                                done();\n                            });\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9791236-490e-4dc7-be2b-f5f11af88dae",
                    "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 400",
                    "fullTitle": "User - email available Fail - req without email in query status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "94cc61c4-0b2e-428e-a319-069b196d0fee",
                    "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Fail - req without email in query body is object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0d2be971-14aa-4aa1-a3bd-afa610bc5d36",
                    "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "User - email available Fail - req without email in query valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a09a3559-46b8-44e8-993d-8d8304c46545",
                    "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "Fail - req with empty email in query",
                "suites": [],
                "tests": [
                  {
                    "title": "status 400",
                    "fullTitle": "User - email available Fail - req with empty email in query status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "95a173b5-af8c-4c71-b096-c393d9726788",
                    "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Fail - req with empty email in query body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "34226b18-d241-47cc-8147-38ee4bb20ade",
                    "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "User - email available Fail - req with empty email in query valid response",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b102f22b-8031-455a-9791-b4cb8b90a36c",
                    "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "\\test\\api\\CustomEntity.js",
                "uuid": "544db768-5ab5-4683-9714-90a2214090bb",
                "beforeHooks": [
                  {
                    "title": "\"before all\" hook",
                    "fullTitle": "User - email available Fail - req with empty email in query \"before all\" hook",
                    "timedOut": false,
                    "duration": 25,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "done => {\n                chai.request(server).post('/user')\n                    .send(userObject)\n                    .end\n                        chai.request(server).get('/user/available?email=')\n                            .send()\n                            .end((err, res) => {\n                                response = res;\n                                done();\n                            });\n                    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dc421431-05f5-4a5f-9047-2574c0231ac8",
                    "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "afterHooks": [],
                "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
                "passes": [
                  {
                    "title": "status 400",
                    "fullTitle": "User - email available Fail - req with empty email in query status 400",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.status.should.be.eql(400);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "95a173b5-af8c-4c71-b096-c393d9726788",
                    "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "body is object",
                    "fullTitle": "User - email available Fail - req with empty email in query body is object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.a('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "34226b18-d241-47cc-8147-38ee4bb20ade",
                    "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "valid response",
                    "fullTitle": "User - email available Fail - req with empty email in query valid response",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b102f22b-8031-455a-9791-b4cb8b90a36c",
                    "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasBeforeHooks": true,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 7,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\api\\CustomEntity.js",
            "uuid": "a937ce1b-9b18-4c91-b8ab-b8774e00840a",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\api\\CustomEntity.js",
        "uuid": "5cbdf9ea-4084-4d8a-89d5-5598ebf477bd",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "CustomEntity \"before all\" hook",
            "timedOut": false,
            "duration": 234,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n        knex.migrate.rollback()\n            .thenknex.migrate.latest())\n            .then(() => done());",
            "err": {},
            "isRoot": false,
            "uuid": "81ca32f7-a862-4949-955e-a06d40534c87",
            "parentUUID": "5cbdf9ea-4084-4d8a-89d5-5598ebf477bd",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook",
            "fullTitle": "CustomEntity \"before each\" hook",
            "timedOut": false,
            "duration": 176,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n        knex.migrate.rollback()\n            .thenknex.migrate.latest())\n            .then(() => done());",
            "err": {},
            "isRoot": false,
            "uuid": "98a97dbd-4102-4924-9a14-0c5dd9941ba2",
            "parentUUID": "5cbdf9ea-4084-4d8a-89d5-5598ebf477bd",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "CustomEntity \"after all\" hook",
            "timedOut": false,
            "duration": 54,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "done => {\n        knex.migrate.rollback()\n            .thendone());",
            "err": {},
            "isRoot": false,
            "uuid": "46482f00-3bf7-4204-b8ca-4fb82e6ab70f",
            "parentUUID": "5cbdf9ea-4084-4d8a-89d5-5598ebf477bd",
            "isHook": true,
            "skipped": false
          }
        ],
        "fullFile": "C:\\Users\\Adam Ryvola\\Desktop\\localio\\app\\framework\\test\\api\\CustomEntity.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": true,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "a043d65d-f3c5-40d9-b549-bb084d8174ba",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "throw error on create BasicModel class instance",
      "fullTitle": "Abstract class - constructor throw error on create BasicModel class instance",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    new BasicModel();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "d542d3fe-eac2-4c4d-ada5-d8c9278a6961",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create PublicModel class instance",
      "fullTitle": "Abstract class - constructor throw error on create PublicModel class instance",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const PublicModel = require('../../src/api/db/model/PublicModel');\nexpect(() => {\n    new PublicModel();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "2cc2d486-08ee-4828-a100-fda3d52d8981",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create BasicDao class instance",
      "fullTitle": "Abstract class - constructor throw error on create BasicDao class instance",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const BasicDAO = require('../../src/api/db/dao/BasicDAO');\nexpect(() => {\n    new BasicDAO();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "41b5a3c2-083f-4e52-ad53-58dd5b9a2f04",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create EndpointRouter class instance",
      "fullTitle": "Abstract class - constructor throw error on create EndpointRouter class instance",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const EndpointRouter = require('../../src/api/router/EndpointRouter');\nexpect(() => {\n    new EndpointRouter();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "6f4ec011-7b7c-4278-9c3f-a43c9f7d30bd",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create CRUDRouter class instance",
      "fullTitle": "Abstract class - constructor throw error on create CRUDRouter class instance",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const CRUDRouter = require('../../src/api/router/CRUDRouter');\nexpect(() => {\n    new CRUDRouter();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "e7566b30-803e-41ed-875e-4a692e386ff8",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on getById without id",
      "fullTitle": "BasicDAO Errors throw error on getById without id",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.getById(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "45586763-85e9-4976-b925-e3872f3a7367",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create without data",
      "fullTitle": "BasicDAO Errors throw error on create without data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.create(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "ca2bee8d-e0e4-4f25-8891-3ed0e12cedb0",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on update without data",
      "fullTitle": "BasicDAO Errors throw error on update without data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.update(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "e00b9058-fe39-4c34-ae1b-bb2f12cf9f42",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on delete without id",
      "fullTitle": "BasicDAO Errors throw error on delete without id",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.remove(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "22bdaa69-6921-442d-bfb2-c893ad513e4d",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on get table name",
      "fullTitle": "BasicModel Errors throw error on get table name",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    const tableName = BasicModel.tableName;\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "1f877b65-7746-4ce3-80b6-f4b74639f729",
      "parentUUID": "946eda86-59dd-4b7d-9140-13d710c67272",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "3898224e-43ce-4e51-a7a9-b6089556f679",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "8c6d0a2c-c9c7-45bd-b22b-673312268233",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "Success valid model schema",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "ae18ed84-6ac3-4607-8cca-02cadec25306",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "user properties values",
      "fullTitle": "Success user properties values",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "7f005f98-2815-421a-a1ce-75b62ea6724d",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "c927f6d8-41da-464f-b621-5bfd7be66c3a",
      "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "61100c70-513a-457e-a869-78d6a75f8fd7",
      "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "635f0adf-e818-4cb8-9efa-ab87387c1083",
      "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "2592d21e-a4d9-49ea-8f81-86c757c92465",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "d8dca341-7d8b-4d6d-a8ee-3967dfa423a6",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "Success valid model schema",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "4a6a2224-00de-4872-8c3f-dd9843f1c799",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "user properties values",
      "fullTitle": "Success user properties values",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "3369c7b8-f1f4-4c9a-8b7b-1a851117b06a",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 404",
      "fullTitle": "Fail - no user status 404",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(404);",
      "err": {},
      "isRoot": false,
      "uuid": "3ea83f21-34e8-4a2b-800e-c8f160bd57de",
      "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - no user body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "25fe22a0-26ef-444a-b764-c234bd2c284d",
      "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - no user valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "a3a3a5de-1ec9-4836-ac85-b0337263474b",
      "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - id as string status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "13926b71-3308-4d01-86ae-3c88080867e6",
      "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - id as string body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "078b2ce1-c2c2-41e8-9c8b-4d33d543b9dc",
      "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - id as string valid response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "d769e855-2abc-4583-8e9f-723f30d57de1",
      "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "GetAll status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "0ddbeda8-254b-4a77-b572-d3db2219bb28",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is array",
      "fullTitle": "GetAll body is array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('array');\nresponse.body.length.should.be.eql(2);",
      "err": {},
      "isRoot": false,
      "uuid": "22bd20eb-ee00-43b0-aa45-a5acc66e8694",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "GetAll valid model schema",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const users = response.body;\nusers[0].should.be.property('id');\nusers[0].id.should.be.a('number');\nusers[0].should.be.property('name');\nusers[0].name.should.be.a('string');\nusers[0].should.be.property('email');\nusers[0].email.should.be.a('string');\nusers[0].should.be.property('accounts');\nusers[0].accounts.should.be.a('array');\nusers[0].accounts[0].should.be.a('object');\nusers[1].should.be.property('id');\nusers[1].id.should.be.a('number');\nusers[1].should.be.property('name');\nusers[1].name.should.be.a('string');\nusers[1].should.be.property('email');\nusers[1].email.should.be.a('string');\nusers[1].should.be.property('accounts');\nusers[1].accounts.should.be.a('array');\nusers[1].accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "cfdd5f83-05c1-48eb-bab8-aec498ecac86",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "users properties values",
      "fullTitle": "GetAll users properties values",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const users = response.body;\nusers[0].name.should.be.eql(userObject.name);\nusers[0].email.should.be.eql(userObject.email);\nusers[0].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[0].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[0].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[0].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[0].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);\nusers[1].name.should.be.eql(userObject.name);\nusers[1].email.should.be.eql(userObject.email);\nusers[1].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[1].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[1].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[1].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[1].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "894bd02d-fb04-40c1-b7e6-9877d22ef36f",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "5bf20c09-2bda-4bd0-92ee-4849c8611f63",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "a6d036fb-a7be-410c-8c0f-7ca88ed77624",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Success valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(true);",
      "err": {},
      "isRoot": false,
      "uuid": "f67cbe58-509d-449a-bee2-931e57ce2c26",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "one is deleted",
      "fullTitle": "Success one is deleted",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "allUsers.length.should.be.eql(1);\nallUsers[0].id.should.be.eql(2);",
      "err": {},
      "isRoot": false,
      "uuid": "a5cc0b57-9107-4bed-9680-ddc615833031",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 404",
      "fullTitle": "Fail - no user in db status 404",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(404);",
      "err": {},
      "isRoot": false,
      "uuid": "01537af7-2ff5-4c1d-a5b9-f77ee59ef6da",
      "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - no user in db body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object')",
      "err": {},
      "isRoot": false,
      "uuid": "fdb5ba8b-6bef-40c0-ab03-565ce4a2e4e1",
      "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - no user in db valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "71808254-45b2-408c-ab79-7423187e7c33",
      "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - id as string status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "920f8382-e8e5-43bd-9309-cfe16d049b66",
      "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - id as string body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "5a3ada18-513e-4b04-bac1-48b23b9666df",
      "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - id as string valid response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "bc056d6c-f711-4550-a481-42d7881ccc0c",
      "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "cc7f9c33-235f-4782-8918-c423ac93529d",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "421d0666-3b04-4ad5-bb47-9d4ee4b11d93",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "Success valid model schema",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "c798cd17-eca5-40e2-90e5-4f4611e83e9c",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "user properties values",
      "fullTitle": "Success user properties values",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.name.should.be.eql(userToUpdate.name);\nuser.email.should.be.eql(userToUpdate.email);\nuser.accounts[0].accessToken.should.be.eql(userToUpdate.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userToUpdate.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userToUpdate.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userToUpdate.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userToUpdate.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "3ed31c3b-a006-4ac4-aa2f-5e1ee3d010b8",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success - email is not available status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "23e32a73-d66f-4c11-9f32-d4f6d7f78545",
      "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success - email is not available body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "ffcad017-d86e-4bac-a255-408e0712fc09",
      "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "correct response value",
      "fullTitle": "Success - email is not available correct response value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.result.should.be.eql(false);",
      "err": {},
      "isRoot": false,
      "uuid": "59c0b64a-0ea6-42c7-8d7c-543c39853112",
      "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success - email is available status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "7edec915-f9a5-4faf-8090-a035c9d35d9c",
      "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success - email is available body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "9ac5cf7b-7d65-422e-9085-23c0e8a67ee7",
      "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "correct response value",
      "fullTitle": "Success - email is available correct response value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.result.should.be.eql(true);",
      "err": {},
      "isRoot": false,
      "uuid": "74251c21-5f9f-47ab-9c1b-34affd7988e5",
      "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - req without email in query status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "94cc61c4-0b2e-428e-a319-069b196d0fee",
      "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - req without email in query body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "0d2be971-14aa-4aa1-a3bd-afa610bc5d36",
      "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - req without email in query valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "a09a3559-46b8-44e8-993d-8d8304c46545",
      "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - req with empty email in query status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "95a173b5-af8c-4c71-b096-c393d9726788",
      "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - req with empty email in query body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "34226b18-d241-47cc-8147-38ee4bb20ade",
      "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - req with empty email in query valid response",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "b102f22b-8031-455a-9791-b4cb8b90a36c",
      "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "throw error on create BasicModel class instance",
      "fullTitle": "Abstract class - constructor throw error on create BasicModel class instance",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    new BasicModel();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "d542d3fe-eac2-4c4d-ada5-d8c9278a6961",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create PublicModel class instance",
      "fullTitle": "Abstract class - constructor throw error on create PublicModel class instance",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const PublicModel = require('../../src/api/db/model/PublicModel');\nexpect(() => {\n    new PublicModel();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "2cc2d486-08ee-4828-a100-fda3d52d8981",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create BasicDao class instance",
      "fullTitle": "Abstract class - constructor throw error on create BasicDao class instance",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const BasicDAO = require('../../src/api/db/dao/BasicDAO');\nexpect(() => {\n    new BasicDAO();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "41b5a3c2-083f-4e52-ad53-58dd5b9a2f04",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create EndpointRouter class instance",
      "fullTitle": "Abstract class - constructor throw error on create EndpointRouter class instance",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const EndpointRouter = require('../../src/api/router/EndpointRouter');\nexpect(() => {\n    new EndpointRouter();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "6f4ec011-7b7c-4278-9c3f-a43c9f7d30bd",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create CRUDRouter class instance",
      "fullTitle": "Abstract class - constructor throw error on create CRUDRouter class instance",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const CRUDRouter = require('../../src/api/router/CRUDRouter');\nexpect(() => {\n    new CRUDRouter();\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "e7566b30-803e-41ed-875e-4a692e386ff8",
      "parentUUID": "e2d973e3-aef7-4583-8499-c0094ecee236",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on getById without id",
      "fullTitle": "BasicDAO Errors throw error on getById without id",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.getById(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "45586763-85e9-4976-b925-e3872f3a7367",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on create without data",
      "fullTitle": "BasicDAO Errors throw error on create without data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.create(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "ca2bee8d-e0e4-4f25-8891-3ed0e12cedb0",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on update without data",
      "fullTitle": "BasicDAO Errors throw error on update without data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.update(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "e00b9058-fe39-4c34-ae1b-bb2f12cf9f42",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on delete without id",
      "fullTitle": "BasicDAO Errors throw error on delete without id",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const UserDAO = require('../../src/api/db/dao/user/UserDAO');\nexpect(() => {\n    UserDAO.remove(null, null);\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "22bdaa69-6921-442d-bfb2-c893ad513e4d",
      "parentUUID": "55c10128-05fd-4af8-9288-b1cff3aaa573",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throw error on get table name",
      "fullTitle": "BasicModel Errors throw error on get table name",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const BasicModel = require('../../src/api/db/model/BasicModel');\nexpect(() => {\n    const tableName = BasicModel.tableName;\n}).to.throw();",
      "err": {},
      "isRoot": false,
      "uuid": "1f877b65-7746-4ce3-80b6-f4b74639f729",
      "parentUUID": "946eda86-59dd-4b7d-9140-13d710c67272",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "3898224e-43ce-4e51-a7a9-b6089556f679",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "8c6d0a2c-c9c7-45bd-b22b-673312268233",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "Success valid model schema",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "ae18ed84-6ac3-4607-8cca-02cadec25306",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "user properties values",
      "fullTitle": "Success user properties values",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "7f005f98-2815-421a-a1ce-75b62ea6724d",
      "parentUUID": "fd5473dc-fb52-468f-a053-c41202901784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "c927f6d8-41da-464f-b621-5bfd7be66c3a",
      "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "61100c70-513a-457e-a869-78d6a75f8fd7",
      "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "635f0adf-e818-4cb8-9efa-ab87387c1083",
      "parentUUID": "51839eed-bd3f-4ae9-97d4-87143fd9dca5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "2592d21e-a4d9-49ea-8f81-86c757c92465",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "d8dca341-7d8b-4d6d-a8ee-3967dfa423a6",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "Success valid model schema",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "4a6a2224-00de-4872-8c3f-dd9843f1c799",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "user properties values",
      "fullTitle": "Success user properties values",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.name.should.be.eql(userObject.name);\nuser.email.should.be.eql(userObject.email);\nuser.accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userObject.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "3369c7b8-f1f4-4c9a-8b7b-1a851117b06a",
      "parentUUID": "ddf2f114-da8f-4983-9613-72edd99d4ed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 404",
      "fullTitle": "Fail - no user status 404",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(404);",
      "err": {},
      "isRoot": false,
      "uuid": "3ea83f21-34e8-4a2b-800e-c8f160bd57de",
      "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - no user body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "25fe22a0-26ef-444a-b764-c234bd2c284d",
      "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - no user valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "a3a3a5de-1ec9-4836-ac85-b0337263474b",
      "parentUUID": "bb5e1f84-2041-4a66-a5b1-5e609194e532",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - id as string status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "13926b71-3308-4d01-86ae-3c88080867e6",
      "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - id as string body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "078b2ce1-c2c2-41e8-9c8b-4d33d543b9dc",
      "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - id as string valid response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "d769e855-2abc-4583-8e9f-723f30d57de1",
      "parentUUID": "3db78362-7634-4069-a3f0-f6a9d96c65bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "GetAll status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "0ddbeda8-254b-4a77-b572-d3db2219bb28",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is array",
      "fullTitle": "GetAll body is array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('array');\nresponse.body.length.should.be.eql(2);",
      "err": {},
      "isRoot": false,
      "uuid": "22bd20eb-ee00-43b0-aa45-a5acc66e8694",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "GetAll valid model schema",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const users = response.body;\nusers[0].should.be.property('id');\nusers[0].id.should.be.a('number');\nusers[0].should.be.property('name');\nusers[0].name.should.be.a('string');\nusers[0].should.be.property('email');\nusers[0].email.should.be.a('string');\nusers[0].should.be.property('accounts');\nusers[0].accounts.should.be.a('array');\nusers[0].accounts[0].should.be.a('object');\nusers[1].should.be.property('id');\nusers[1].id.should.be.a('number');\nusers[1].should.be.property('name');\nusers[1].name.should.be.a('string');\nusers[1].should.be.property('email');\nusers[1].email.should.be.a('string');\nusers[1].should.be.property('accounts');\nusers[1].accounts.should.be.a('array');\nusers[1].accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "cfdd5f83-05c1-48eb-bab8-aec498ecac86",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "users properties values",
      "fullTitle": "GetAll users properties values",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const users = response.body;\nusers[0].name.should.be.eql(userObject.name);\nusers[0].email.should.be.eql(userObject.email);\nusers[0].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[0].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[0].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[0].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[0].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);\nusers[1].name.should.be.eql(userObject.name);\nusers[1].email.should.be.eql(userObject.email);\nusers[1].accounts[0].accessToken.should.be.eql(userObject.accounts[0].accessToken);\nusers[1].accounts[0].refreshToken.should.be.eql(userObject.accounts[0].refreshToken);\nusers[1].accounts[0].email.should.be.eql(userObject.accounts[0].email);\nusers[1].accounts[0].provider.should.be.eql(userObject.accounts[0].provider);\nusers[1].accounts[0].subject.should.be.eql(userObject.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "894bd02d-fb04-40c1-b7e6-9877d22ef36f",
      "parentUUID": "b19ddad4-60e4-4034-b043-0fc629d3cf65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "5bf20c09-2bda-4bd0-92ee-4849c8611f63",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "a6d036fb-a7be-410c-8c0f-7ca88ed77624",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Success valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(true);",
      "err": {},
      "isRoot": false,
      "uuid": "f67cbe58-509d-449a-bee2-931e57ce2c26",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "one is deleted",
      "fullTitle": "Success one is deleted",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "allUsers.length.should.be.eql(1);\nallUsers[0].id.should.be.eql(2);",
      "err": {},
      "isRoot": false,
      "uuid": "a5cc0b57-9107-4bed-9680-ddc615833031",
      "parentUUID": "f053306e-3cf1-4fc9-b963-a02a206fa102",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 404",
      "fullTitle": "Fail - no user in db status 404",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(404);",
      "err": {},
      "isRoot": false,
      "uuid": "01537af7-2ff5-4c1d-a5b9-f77ee59ef6da",
      "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - no user in db body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object')",
      "err": {},
      "isRoot": false,
      "uuid": "fdb5ba8b-6bef-40c0-ab03-565ce4a2e4e1",
      "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - no user in db valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "71808254-45b2-408c-ab79-7423187e7c33",
      "parentUUID": "afa9bef7-52dc-4813-b14e-1352d4601441",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - id as string status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "920f8382-e8e5-43bd-9309-cfe16d049b66",
      "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - id as string body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "5a3ada18-513e-4b04-bac1-48b23b9666df",
      "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - id as string valid response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "bc056d6c-f711-4550-a481-42d7881ccc0c",
      "parentUUID": "0ba60de0-e7aa-4cf2-afa3-63ef7fd7a3c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "cc7f9c33-235f-4782-8918-c423ac93529d",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "421d0666-3b04-4ad5-bb47-9d4ee4b11d93",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid model schema",
      "fullTitle": "Success valid model schema",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.should.be.property('id');\nuser.id.should.be.a('number');\nuser.should.be.property('name');\nuser.name.should.be.a('string');\nuser.should.be.property('email');\nuser.email.should.be.a('string');\nuser.should.be.property('accounts');\nuser.accounts.should.be.a('array');\nuser.accounts[0].should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "c798cd17-eca5-40e2-90e5-4f4611e83e9c",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "user properties values",
      "fullTitle": "Success user properties values",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "user = response.body;\nuser.name.should.be.eql(userToUpdate.name);\nuser.email.should.be.eql(userToUpdate.email);\nuser.accounts[0].accessToken.should.be.eql(userToUpdate.accounts[0].accessToken);\nuser.accounts[0].refreshToken.should.be.eql(userToUpdate.accounts[0].refreshToken);\nuser.accounts[0].email.should.be.eql(userToUpdate.accounts[0].email);\nuser.accounts[0].provider.should.be.eql(userToUpdate.accounts[0].provider);\nuser.accounts[0].subject.should.be.eql(userToUpdate.accounts[0].subject);",
      "err": {},
      "isRoot": false,
      "uuid": "3ed31c3b-a006-4ac4-aa2f-5e1ee3d010b8",
      "parentUUID": "8cd07f35-d8a1-4215-9c6a-3881c247ff2a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success - email is not available status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "23e32a73-d66f-4c11-9f32-d4f6d7f78545",
      "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success - email is not available body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "ffcad017-d86e-4bac-a255-408e0712fc09",
      "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "correct response value",
      "fullTitle": "Success - email is not available correct response value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.result.should.be.eql(false);",
      "err": {},
      "isRoot": false,
      "uuid": "59c0b64a-0ea6-42c7-8d7c-543c39853112",
      "parentUUID": "28a74408-3a1e-4303-8243-34e0be1d3709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 200",
      "fullTitle": "Success - email is available status 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(200);",
      "err": {},
      "isRoot": false,
      "uuid": "7edec915-f9a5-4faf-8090-a035c9d35d9c",
      "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Success - email is available body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "9ac5cf7b-7d65-422e-9085-23c0e8a67ee7",
      "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "correct response value",
      "fullTitle": "Success - email is available correct response value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.result.should.be.eql(true);",
      "err": {},
      "isRoot": false,
      "uuid": "74251c21-5f9f-47ab-9c1b-34affd7988e5",
      "parentUUID": "2ab9b628-0af0-49dd-a8a6-655cdd299764",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - req without email in query status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "94cc61c4-0b2e-428e-a319-069b196d0fee",
      "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - req without email in query body is object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "0d2be971-14aa-4aa1-a3bd-afa610bc5d36",
      "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - req without email in query valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "a09a3559-46b8-44e8-993d-8d8304c46545",
      "parentUUID": "bf4128f8-d1de-4523-a24d-3dfbee99c4ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "status 400",
      "fullTitle": "Fail - req with empty email in query status 400",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.status.should.be.eql(400);",
      "err": {},
      "isRoot": false,
      "uuid": "95a173b5-af8c-4c71-b096-c393d9726788",
      "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "body is object",
      "fullTitle": "Fail - req with empty email in query body is object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.a('object');",
      "err": {},
      "isRoot": false,
      "uuid": "34226b18-d241-47cc-8147-38ee4bb20ade",
      "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "valid response",
      "fullTitle": "Fail - req with empty email in query valid response",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response.body.should.be.property('success');\nresponse.body.success.should.be.a('boolean');\nresponse.body.success.should.be.eql(false);\nresponse.body.should.be.property('error');\nresponse.body.error.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "b102f22b-8031-455a-9791-b4cb8b90a36c",
      "parentUUID": "544db768-5ab5-4683-9714-90a2214090bb",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}